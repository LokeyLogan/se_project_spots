!function(){"use strict";var e="";const t={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-btn",inactiveButtonClass:"modal__submit-btn_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error"},r=(e,t,r)=>{const o=e.querySelector(`#${t.id}-error`);o&&(o.textContent=""),t.classList.remove(r.inputErrorClass)},o=(e,t,r)=>{t&&((e=>e.some((e=>!e.validity.valid)))(e)?((e,t)=>{e&&(e.disabled=!0,e.classList.add(t.inactiveButtonClass))})(t,r):(t.disabled=!1,t.classList.remove(r.inactiveButtonClass)))};var n=class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}editUserInfo(e){let{name:t,about:r}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}updateAvatar(e){let{avatar:t}=e;return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}addCard(e){let{name:t,link:r}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}removeCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}likeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}unlikeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}},a=e+"d3610e9c6dce3cb370d8.svg",s=e+"d38272e02bb4f1ab1c37.svg",l=e+"40608da7369d39bc1077.svg",d=e+"dba18798529f242c4c6d.svg",c=e+"d73f076c46eb5467f5fc.svg";document.addEventListener("DOMContentLoaded",(()=>{document.querySelector(".header__logo").src=a,document.querySelector(".profile__pencil-icon").src=c,document.querySelector(".profile__edit-btn img").src=s,document.querySelector(".profile__add-btn img").src=l,document.querySelectorAll(".modal__close-btn img").forEach((e=>{e.src=d}));const e=new n({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"b11e468b-3f59-4efb-985e-f8545b79cf07","Content-Type":"application/json"}}),i=document.querySelector(".profile__edit-btn"),u=document.querySelector(".profile__add-btn"),m=document.querySelector(".profile__avatar-btn"),_=document.querySelector(".profile__name"),h=document.querySelector(".profile__description"),f=document.querySelector(".profile__avatar"),v=document.querySelector("#edit-profile-modal"),b=document.querySelector("#avatar-modal"),p=document.querySelector("#add-card-modal"),y=document.querySelector("#preview-modal"),S=document.forms["edit-profile"],q=v.querySelector("#profile-name-input"),E=v.querySelector("#profile-description-input"),k=S.querySelector(".modal__submit-btn"),C=document.forms.card__form,g=C.querySelector(".modal__submit-btn"),L=p.querySelector("#add-card-name-input"),$=p.querySelector("#add-card-link-input"),U=document.forms["edit-avatar"],x=U.querySelector("#profile-avatar-input"),j=U.querySelector(".modal__submit-btn"),P=y.querySelector(".modal__image"),A=y.querySelector(".modal__caption"),D=document.querySelector("#card-template"),I=document.querySelector(".cards__list"),T=document.querySelector("#delete-modal"),B=document.forms["confirm-delete"],O=B.querySelector("button[type='submit']");let w=null,N=null;function J(e){e.classList.add("modal_opened"),document.addEventListener("keydown",M)}function H(e){e.classList.remove("modal_opened"),document.removeEventListener("keydown",M)}function M(e){if("Escape"===e.key){const e=document.querySelector(".modal_opened");e&&H(e)}}function R(t){let r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"prepend";const o=function(t){const r=D.content.querySelector(".card").cloneNode(!0),o=r.querySelector(".card__title"),n=r.querySelector(".card__image"),a=r.querySelector(".card__like-button"),s=r.querySelector(".card__delete-button");return o.textContent=t.name,n.src=t.link,n.alt=t.name,t.isLiked&&a.classList.add("card__like-button-liked"),a.addEventListener("click",(()=>{(a.classList.contains("card__like-button-liked")?e.unlikeCard(t._id):e.likeCard(t._id)).then((e=>{a.classList.toggle("card__like-button-liked",e.isLiked)})).catch((e=>{console.error("❌ Like/Unlike failed:",e)}))})),n.addEventListener("click",(()=>{J(y),P.src=t.link,P.alt=t.name,A.textContent=t.name})),s.addEventListener("click",(()=>{w=r,N=t._id,J(T)})),r}(t);I[r](o)}B.addEventListener("submit",(t=>{t.preventDefault(),N&&(O.textContent="Deleting...",e.removeCard(N).then((()=>{w.remove(),H(T)})).catch((e=>{console.error("❌ Delete failed:",e)})).finally((()=>{O.textContent="Yes, Delete"})))})),document.querySelectorAll(".modal__close-btn").forEach((e=>{const t=e.closest(".modal");e.addEventListener("click",(()=>H(t)))})),document.querySelectorAll(".modal").forEach((e=>{e.addEventListener("click",(t=>{t.target===e&&H(e)}))})),i.addEventListener("click",(()=>{q.value=_.textContent,E.value=h.textContent,((e,t)=>{const n=Array.from(e.querySelectorAll(t.inputSelector)),a=e.querySelector(t.submitButtonSelector);n.forEach((o=>r(e,o,t))),o(n,a,t)})(S,t),J(v)})),u.addEventListener("click",(()=>J(p))),m.addEventListener("click",(()=>J(b))),S.addEventListener("submit",(function(t){t.preventDefault();const r=q.value,o=E.value;k.textContent="Saving...",e.editUserInfo({name:r,about:o}).then((e=>{_.textContent=e.name,h.textContent=e.about,H(v)})).catch((e=>console.error("❌ Error updating user:",e))).finally((()=>{k.textContent="Save"}))})),C.addEventListener("submit",(function(t){t.preventDefault();const r=L.value.trim(),o=$.value.trim();r&&o?(g.disabled=!0,g.textContent="Saving...",e.addCard({name:r,link:o}).then((e=>{R(e,"prepend"),C.reset(),H(p)})).catch((e=>console.error("❌ Error adding card:",e))).finally((()=>{g.disabled=!1,g.textContent="Save"}))):alert("Please enter both a name and a valid image URL.")})),U.addEventListener("submit",(function(t){t.preventDefault();const r=x.value.trim();r?(j.textContent="Saving...",e.updateAvatar({avatar:r}).then((e=>{f.src=e.avatar,H(b),U.reset()})).catch((e=>{console.error("❌ Error updating avatar:",e)})).finally((()=>{j.textContent="Save"}))):alert("Please enter a valid image URL.")})),e.getAppInfo().then((e=>{let[t,r]=e;t.forEach((e=>{R(e,"append")})),f.src=r.avatar,_.textContent=r.name,h.textContent=r.about})).catch((e=>{console.error("Failed to load cards or user info from API:",e)})),(e=>{document.querySelectorAll(e.formSelector).forEach((t=>((e,t)=>{const n=Array.from(e.querySelectorAll(t.inputSelector)),a=e.querySelector(t.submitButtonSelector);o(n,a,t),n.forEach((e=>{e.addEventListener("input",(()=>{((e,t)=>{e.validity.valid?r(e.form,e,t):((e,t,r,o)=>{const n=e.querySelector(`#${t.id}-error`);n&&(n.textContent=r),t.classList.add(o.inputErrorClass)})(e.form,e,e.validationMessage,t)})(e,t),o(n,a,t)}))}))})(t,e)))})(t)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,